{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDevelopment\\\\Website\\\\Interview\\\\accuknox-assignment\\\\src\\\\components\\\\TextContainer\\\\TextEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextEditor() {\n  _s();\n  const [styles, setStyles] = useState([[{\n    fontWeight: 'normal'\n  }, {\n    fontStyle: 'normal'\n  }, {\n    textDecoration: 'none'\n  }, {\n    fontSize: '16px'\n  }, {\n    color: '#000000'\n  }], [{\n    fontWeight: 'normal'\n  }, {\n    fontStyle: 'normal'\n  }, {\n    textDecoration: 'none'\n  }, {\n    fontSize: '16px'\n  }, {\n    color: '#000000'\n  }], [{\n    fontWeight: 'normal'\n  }, {\n    fontStyle: 'normal'\n  }, {\n    textDecoration: 'none'\n  }, {\n    fontSize: '16px'\n  }, {\n    color: '#000000'\n  }], [{\n    fontWeight: 'normal'\n  }, {\n    fontStyle: 'normal'\n  }, {\n    textDecoration: 'none'\n  }, {\n    fontSize: '16px'\n  }, {\n    color: '#000000'\n  }]]);\n  const toggleStyle = (row, col, styleProperty) => {\n    setStyles(prevStyles => {\n      const updatedStyles = [...prevStyles];\n      const currentStyle = updatedStyles[row][col];\n      updatedStyles[row][col] = {\n        ...currentStyle,\n        [styleProperty]: currentStyle[styleProperty] === 'normal' ? 'bold' : 'normal'\n      };\n      return updatedStyles;\n    });\n  };\n  const handleStyleChange = (row, col, style) => {\n    setStyles(prevStyles => {\n      const updatedStyles = [...prevStyles];\n      updatedStyles[row][col] = {\n        ...updatedStyles[row][col],\n        ...style\n      };\n      return updatedStyles;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: styles.map((rowStyles, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle(rowIndex, 0, 'fontWeight'),\n          children: \"Bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle(rowIndex, 1, 'fontStyle'),\n          children: \"Italic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle(rowIndex, 2, 'textDecoration'),\n          children: \"Underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Font Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 1,\n          onChange: e => handleStyleChange(rowIndex, 3, {\n            fontSize: e.target.value + 'px'\n          }),\n          value: parseInt(styles[rowIndex][3].fontSize)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          onChange: e => handleStyleChange(rowIndex, 4, {\n            color: e.target.value\n          }),\n          value: styles[rowIndex][4].color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        style: rowStyles[0],\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: `Sample Text ${rowIndex + 1}`,\n          onChange: e => {} // No need to handle text change for now\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, rowIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TextEditor, \"TsdCgnPlEPIbTToBTZM1ncm0G2E=\");\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextEditor","_s","styles","setStyles","fontWeight","fontStyle","textDecoration","fontSize","color","toggleStyle","row","col","styleProperty","prevStyles","updatedStyles","currentStyle","handleStyleChange","style","className","children","map","rowStyles","rowIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","onChange","e","target","value","parseInt","_c","$RefreshReg$"],"sources":["D:/WebDevelopment/Website/Interview/accuknox-assignment/src/components/TextContainer/TextEditor.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../styles/style.css';\r\n\r\nfunction TextEditor() {\r\n  const [styles, setStyles] = useState([\r\n    [{ fontWeight: 'normal' }, { fontStyle: 'normal' }, { textDecoration: 'none' }, { fontSize: '16px' }, { color: '#000000' }],\r\n    [{ fontWeight: 'normal' }, { fontStyle: 'normal' }, { textDecoration: 'none' }, { fontSize: '16px' }, { color: '#000000' }],\r\n    [{ fontWeight: 'normal' }, { fontStyle: 'normal' }, { textDecoration: 'none' }, { fontSize: '16px' }, { color: '#000000' }],\r\n    [{ fontWeight: 'normal' }, { fontStyle: 'normal' }, { textDecoration: 'none' }, { fontSize: '16px' }, { color: '#000000' }],\r\n  ]);\r\n\r\n  const toggleStyle = (row, col, styleProperty) => {\r\n    setStyles(prevStyles => {\r\n      const updatedStyles = [...prevStyles];\r\n      const currentStyle = updatedStyles[row][col];\r\n      updatedStyles[row][col] = { ...currentStyle, [styleProperty]: currentStyle[styleProperty] === 'normal' ? 'bold' : 'normal' };\r\n      return updatedStyles;\r\n    });\r\n  };\r\n\r\n  const handleStyleChange = (row, col, style) => {\r\n    setStyles(prevStyles => {\r\n      const updatedStyles = [...prevStyles];\r\n      updatedStyles[row][col] = { ...updatedStyles[row][col], ...style };\r\n      return updatedStyles;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {styles.map((rowStyles, rowIndex) => (\r\n        <div key={rowIndex} className=\"grid-row\">\r\n          <div className=\"text-editor\">\r\n            <button onClick={() => toggleStyle(rowIndex, 0, 'fontWeight')}>Bold</button>\r\n            <button onClick={() => toggleStyle(rowIndex, 1, 'fontStyle')}>Italic</button>\r\n            <button onClick={() => toggleStyle(rowIndex, 2, 'textDecoration')}>Underline</button>\r\n            <button>Font Size</button>\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              onChange={(e) => handleStyleChange(rowIndex, 3, { fontSize: e.target.value + 'px' })}\r\n              value={parseInt(styles[rowIndex][3].fontSize)}\r\n            />\r\n            <button>Color</button>\r\n            <input\r\n              type=\"color\"\r\n              onChange={(e) => handleStyleChange(rowIndex, 4, { color: e.target.value })}\r\n              value={styles[rowIndex][4].color}\r\n            />\r\n          </div>\r\n          <div className=\"text-box\" style={rowStyles[0]}>\r\n            <input\r\n              type=\"text\"\r\n              value={`Sample Text ${rowIndex + 1}`}\r\n              onChange={(e) => { }} // No need to handle text change for now\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}