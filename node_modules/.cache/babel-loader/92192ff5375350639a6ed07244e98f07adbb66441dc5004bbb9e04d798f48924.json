{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDevelopment\\\\Website\\\\Interview\\\\accuknox-assignment\\\\src\\\\components\\\\TextContainer\\\\TextEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextEditor() {\n  _s();\n  const [styles, setStyles] = useState([{\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    textDecoration: 'none',\n    fontSize: '16px',\n    color: '#000000'\n  }, {\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    textDecoration: 'none',\n    fontSize: '16px',\n    color: '#000000'\n  }, {\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    textDecoration: 'none',\n    fontSize: '16px',\n    color: '#000000'\n  }, {\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    textDecoration: 'none',\n    fontSize: '16px',\n    color: '#000000'\n  }]);\n  useEffect(() => {\n    console.log('Styles updated:', styles);\n  }, [styles]);\n  const toggleStyle = (index, styleProperty) => {\n    setStyles(prevStyles => {\n      const updatedStyles = [...prevStyles];\n      updatedStyles[index] = {\n        ...updatedStyles[index],\n        [styleProperty]: updatedStyles[index][styleProperty] === 'normal' ? 'bold' : 'normal'\n      };\n      return updatedStyles;\n    });\n  };\n  const handleStyleChange = (index, styleProperty, value) => {\n    setStyles(prevStyles => {\n      const updatedStyles = [...prevStyles];\n      updatedStyles[index] = {\n        ...updatedStyles[index],\n        [styleProperty]: value\n      };\n      return updatedStyles;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: styles.map((style, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle(index, 'fontWeight'),\n          children: \"Bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle(index, 'fontStyle'),\n          children: \"Italic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleStyle(index, 'textDecoration'),\n          children: \"Underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Font Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 1,\n          value: parseInt(style.fontSize),\n          onChange: e => handleStyleChange(index, 'fontSize', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: style.color,\n          onChange: e => handleStyleChange(index, 'color', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: `Sample Text ${index + 1}`,\n          onChange: e => {} // No need to handle text change for now\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TextEditor, \"as/4Wf7GH+Vtb/U67qgzKDpfMSw=\");\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextEditor","_s","styles","setStyles","fontWeight","fontStyle","textDecoration","fontSize","color","console","log","toggleStyle","index","styleProperty","prevStyles","updatedStyles","handleStyleChange","value","className","children","map","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","parseInt","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/WebDevelopment/Website/Interview/accuknox-assignment/src/components/TextContainer/TextEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../styles/style.css';\r\n\r\nfunction TextEditor() {\r\n  const [styles, setStyles] = useState([\r\n    { fontWeight: 'normal', fontStyle: 'normal', textDecoration: 'none', fontSize: '16px', color: '#000000' },\r\n    { fontWeight: 'normal', fontStyle: 'normal', textDecoration: 'none', fontSize: '16px', color: '#000000' },\r\n    { fontWeight: 'normal', fontStyle: 'normal', textDecoration: 'none', fontSize: '16px', color: '#000000' },\r\n    { fontWeight: 'normal', fontStyle: 'normal', textDecoration: 'none', fontSize: '16px', color: '#000000' },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log('Styles updated:', styles);\r\n  }, [styles]);\r\n\r\n  const toggleStyle = (index, styleProperty) => {\r\n    setStyles(prevStyles => {\r\n      const updatedStyles = [...prevStyles];\r\n      updatedStyles[index] = { ...updatedStyles[index], [styleProperty]: updatedStyles[index][styleProperty] === 'normal' ? 'bold' : 'normal' };\r\n      return updatedStyles;\r\n    });\r\n  };\r\n\r\n  const handleStyleChange = (index, styleProperty, value) => {\r\n    setStyles(prevStyles => {\r\n      const updatedStyles = [...prevStyles];\r\n      updatedStyles[index] = { ...updatedStyles[index], [styleProperty]: value };\r\n      return updatedStyles;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {styles.map((style, index) => (\r\n        <div key={index} className=\"grid-row\">\r\n          <div className=\"text-editor\">\r\n            <button onClick={() => toggleStyle(index, 'fontWeight')}>Bold</button>\r\n            <button onClick={() => toggleStyle(index, 'fontStyle')}>Italic</button>\r\n            <button onClick={() => toggleStyle(index, 'textDecoration')}>Underline</button>\r\n            <button>Font Size</button>\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              value={parseInt(style.fontSize)}\r\n              onChange={(e) => handleStyleChange(index, 'fontSize', e.target.value)}\r\n            />\r\n            <button>Color</button>\r\n            <input\r\n              type=\"color\"\r\n              value={style.color}\r\n              onChange={(e) => handleStyleChange(index, 'color', e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"text-box\" style={style}>\r\n            <input\r\n              type=\"text\"\r\n              value={`Sample Text ${index + 1}`}\r\n              onChange={(e) => { }} // No need to handle text change for now\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}